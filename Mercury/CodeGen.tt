<#@ template language="C#" hostspecific="True"#>
<#@include file="Manager.ttinclude"#>
<# var manager = Manager.Create(Host, GenerationEnvironment); #>

<# manager.StartHeader(); #>
// Code generated by a template
using System;

namespace Mercury {

<# manager.EndBlock(); #>

<#

for(int i=2;i<5;i++)
{
  manager.StartNewFile("DataX"+i+".generated.cs");
  var data = "";
  var outData = "";
  for(int d = 1; d<=i; d++)
  {
    data += ", TData"+d;
	outData +=  ", out TData"+d;
  }

  #>

  public interface IAssertWithDataCaseBuilder<out TSut<# Write(outData); #>>
  {
      IPostAssertWithDataCaseBuilder<TSut<# Write(data); #>> Assert(Action<TSut<# Write(data); #>> assertAction);
      IPostAssertWithDataCaseBuilder<TSut<# Write(data); #>> Assert(string assertionTestCaseName, Action<TSut<# Write(data); #>> assertAction);
  }

   public interface IPostAssertWithDataCaseBuilder<out TSut<# Write(outData); #>> : ISpecification,
        IAssertWithDataCaseBuilder<TSut<# Write(data); #>>
  {
  }

  public class Data<# Write(i.ToString()); #>{
  


  
  }

<# manager.EndBlock();

}
 #>

<# manager.StartFooter(); #>
}
<# manager.EndBlock(); #>

<# manager.Process(true); #>