// Code generated by a template
using System;
using Mercury.AssertBuilder;
namespace Mercury
{
  public interface IArrangedWithData<out TSut, TData1, TData2, TData3, TData4, TData5>
  {
     IAssertCaseBuilder<TPostAct, TData1, TData2, TData3, TData4, TData5> Act<TPostAct>(Func<TSut, TData1, TData2, TData3, TData4, TData5, TPostAct> actFunc);
     IArrangedWithData<TSut, TData1, TData2, TData3, TData4, TData5> With(TData1 data1, TData2 data2, TData3 data3, TData4 data4, TData5 data5);
  }

  public interface IAssertCaseBuilder<out TSut, out TData1, out TData2, out TData3, out TData4, out TData5>
  {
      IPostAssertCaseBuilder<TSut, TData1, TData2, TData3, TData4, TData5> Assert(Action<TSut, TData1, TData2, TData3, TData4, TData5> assertAction);
      IPostAssertCaseBuilder<TSut, TData1, TData2, TData3, TData4, TData5> Assert(string assertionTestCaseName, Action<TSut, TData1, TData2, TData3, TData4, TData5> assertAction);
  }

  public interface IPostAssertCaseBuilder<out TSut, out TData1, out TData2, out TData3, out TData4, out TData5> : ISpecification,
        IAssertCaseBuilder<TSut, TData1, TData2, TData3, TData4, TData5>
  {
  }
}
